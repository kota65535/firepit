{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ProjectConfig",
  "type": "object",
  "properties": {
    "concurrency": {
      "description": "Task concurrency. Valid only in root project config.",
      "default": 4,
      "type": "integer",
      "format": "uint",
      "minimum": 0.0
    },
    "depends_on": {
      "description": "Dependency tasks for all tasks.",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/DependsOnConfig"
      }
    },
    "env": {
      "description": "Environment variables for all tasks.",
      "default": {},
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "env_files": {
      "description": "Dotenv files for all tasks. If environment variable duplicates, the later one wins.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "gantt_file": {
      "description": "Gantt chart output file path.",
      "type": [
        "string",
        "null"
      ]
    },
    "includes": {
      "description": "Additional config files to be included.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "log": {
      "description": "Log configuration. Valid only in root project config.",
      "default": {
        "file": null,
        "level": "info"
      },
      "allOf": [
        {
          "$ref": "#/definitions/LogConfig"
        }
      ]
    },
    "projects": {
      "description": "Child projects. Valid only in root project config.",
      "default": {},
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "shell": {
      "description": "Shell configuration for all tasks.",
      "default": {
        "args": [
          "-c"
        ],
        "command": "bash"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShellConfig"
        }
      ]
    },
    "tasks": {
      "description": "Task definitions",
      "default": {},
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/TaskConfig"
      }
    },
    "ui": {
      "description": "UI configuration. Valid only in root project config.",
      "default": "cui",
      "allOf": [
        {
          "$ref": "#/definitions/UI"
        }
      ]
    },
    "vars": {
      "description": "Template variables. Can be used at `working_dir`, `env`, `env_files`, `depends_on`, `depends_on.{task, vars}` and `tasks`.",
      "default": {},
      "type": "object",
      "additionalProperties": true
    },
    "working_dir": {
      "description": "Working directory for all tasks.",
      "default": ".",
      "type": "string"
    }
  },
  "definitions": {
    "DependsOnConfig": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/DependsOnConfigStruct"
        }
      ]
    },
    "DependsOnConfigStruct": {
      "type": "object",
      "required": [
        "task"
      ],
      "properties": {
        "cascade": {
          "default": true,
          "type": "boolean"
        },
        "task": {
          "type": "string"
        },
        "vars": {
          "default": {},
          "type": "object",
          "additionalProperties": true
        }
      }
    },
    "ExecProbeConfig": {
      "type": "object",
      "required": [
        "command"
      ],
      "properties": {
        "command": {
          "description": "Command to run",
          "type": "string"
        },
        "env": {
          "description": "Environment variables. Merged with the task's env.",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "env_files": {
          "description": "Dotenv files Merged with the task's env.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "interval": {
          "default": 5,
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "retries": {
          "default": 3,
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "shell": {
          "description": "Shell configuration",
          "anyOf": [
            {
              "$ref": "#/definitions/ShellConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "start_period": {
          "default": 0,
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeout": {
          "default": 5,
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "working_dir": {
          "description": "Working directory",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "HealthCheckConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/LogProbeConfig"
        },
        {
          "$ref": "#/definitions/ExecProbeConfig"
        }
      ]
    },
    "LogConfig": {
      "type": "object",
      "properties": {
        "file": {
          "description": "Log file path.",
          "type": [
            "string",
            "null"
          ]
        },
        "level": {
          "description": "Log level: error, warn, info, debug, trace",
          "default": "info",
          "type": "string"
        }
      }
    },
    "LogProbeConfig": {
      "type": "object",
      "required": [
        "log"
      ],
      "properties": {
        "log": {
          "description": "Log regex pattern to determine the task service is ready",
          "type": "string"
        },
        "timeout": {
          "default": 20,
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "Restart": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "Never"
          ]
        },
        {
          "type": "object",
          "required": [
            "Always"
          ],
          "properties": {
            "Always": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "OnFailure"
          ],
          "properties": {
            "OnFailure": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ServiceConfig": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/ServiceConfigStruct"
        }
      ]
    },
    "ServiceConfigStruct": {
      "type": "object",
      "properties": {
        "healthcheck": {
          "anyOf": [
            {
              "$ref": "#/definitions/HealthCheckConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "restart": {
          "default": "never",
          "allOf": [
            {
              "$ref": "#/definitions/Restart"
            }
          ]
        }
      }
    },
    "ShellConfig": {
      "type": "object",
      "properties": {
        "args": {
          "description": "Arguments of the shell command.",
          "default": [
            "-c"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "Shell command.",
          "default": "bash",
          "type": "string"
        }
      }
    },
    "TaskConfig": {
      "type": "object",
      "properties": {
        "command": {
          "description": "Command to run",
          "type": [
            "string",
            "null"
          ]
        },
        "depends_on": {
          "description": "Dependency task names",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependsOnConfig"
          }
        },
        "env": {
          "description": "Environment variables. Merged with the project's env.",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "env_files": {
          "description": "Dotenv files Merged with the project's env.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inputs": {
          "description": "Inputs file glob patterns",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "label": {
          "description": "Label for display",
          "type": [
            "string",
            "null"
          ]
        },
        "outputs": {
          "description": "Output file glob patterns",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "description": "Service configuration",
          "anyOf": [
            {
              "$ref": "#/definitions/ServiceConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "shell": {
          "description": "Shell configuration",
          "anyOf": [
            {
              "$ref": "#/definitions/ShellConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "vars": {
          "description": "Template variables. Can be used at `label`, `command`, `working_dir`, `env`, `env_files`, `depends_on`, `depends_on.{task, vars}`, `service.healthcheck.log` and `service.healthcheck.exec.{command, working_dir, env, env_files}`",
          "default": {},
          "type": "object",
          "additionalProperties": true
        },
        "working_dir": {
          "description": "Working directory",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "UI": {
      "type": "string",
      "enum": [
        "cui",
        "tui"
      ]
    }
  }
}